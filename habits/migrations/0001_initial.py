# Generated by Django 4.2.3 on 2023-12-23 03:16

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.CharField(blank=True, max_length=255, verbose_name='Место')),
                ('time', models.TimeField(verbose_name='Время')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Длительность выполнения')),
                ('action', models.TextField(verbose_name='Действие')),
                ('is_pleasant', models.BooleanField(blank=True, default=False, null=True, verbose_name='Приятная привычка')),
                ('is_public', models.BooleanField(default=False, verbose_name='Публичная привычка')),
                ('reward', models.CharField(blank=True, max_length=255, null=True, verbose_name='Награда')),
                ('periodicity', models.SmallIntegerField(default=1, verbose_name='Периодичность выполнения в днях')),
                ('last_updated', models.DateField(auto_now_add=True, verbose_name='Дата и время последнего обновления')),
                ('related_habit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='habits.habit', verbose_name='Связанная привычка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'привычка',
                'verbose_name_plural': 'привычки',
            },
        ),
        migrations.AddConstraint(
            model_name='habit',
            constraint=models.UniqueConstraint(condition=models.Q(('duration__lte', datetime.timedelta(seconds=120))), fields=('duration',), name='unique_duration_constraint'),
        ),
    ]
