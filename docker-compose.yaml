version: '3'

services:

    redis:
        image: redis:latest
        ports:
            - "6380:6379"
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 3s
            timeout: 3s
            retries: 5

    db:
        image: postgres:15.1-alpine
        restart: always
        env_file:
            -   .env
        environment:
            - PGDATA=/var/lib/postgresql/data/pgdata/
        volumes:
            - pg_data:/var/lib/postgresql/data/pgdata/
        ports:
            - "5433:5432"
        healthcheck:
            test: [ 'CMD-SHELL', 'pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}' ]
            interval: 10s
            timeout: 5s
            retries: 5

    app:
        build: .
        tty: true
        env_file:
            -   .env
        volumes:
            - .:/app
        command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
        ports:
            - "8000:8000"
        depends_on:
            db:
                condition: service_healthy

    celery:
        build: .
        tty: true
        command: sh -c "celery -A config worker -l INFO"
        depends_on:
            - redis


    celery-beat:
        build: .
        restart: always
        tty: true
        command: sh -c "celery -A config beat -l INFO"
        depends_on:
            - celery
            - redis

volumes:
  pg_data: